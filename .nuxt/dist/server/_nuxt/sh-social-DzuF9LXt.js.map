{"version":3,"file":"sh-social-DzuF9LXt.js","sources":["../../../../node_modules/nuxt/dist/app/composables/fetch.js","../../../../ui.config/sh-social.ts","../../../../node_modules/nuxt-testimonial/dist/runtime/components/NuxtTweet.vue","../../../../components/content/sh-social.vue"],"sourcesContent":["import { computed, reactive, toValue } from \"vue\";\nimport { hash } from \"ohash\";\nimport { useRequestFetch } from \"./ssr.js\";\nimport { useAsyncData } from \"./asyncData.js\";\nimport { fetchDefaults } from \"#build/nuxt.config.mjs\";\nexport function useFetch(request, arg1, arg2) {\n  const [opts = {}, autoKey] = typeof arg1 === \"string\" ? [{}, arg1] : [arg1, arg2];\n  const _request = computed(() => toValue(request));\n  const _key = opts.key || hash([autoKey, typeof _request.value === \"string\" ? _request.value : \"\", ...generateOptionSegments(opts)]);\n  if (!_key || typeof _key !== \"string\") {\n    throw new TypeError(\"[nuxt] [useFetch] key must be a string: \" + _key);\n  }\n  if (!request) {\n    throw new Error(\"[nuxt] [useFetch] request is missing.\");\n  }\n  const key = _key === autoKey ? \"$f\" + _key : _key;\n  if (!opts.baseURL && typeof _request.value === \"string\" && (_request.value[0] === \"/\" && _request.value[1] === \"/\")) {\n    throw new Error('[nuxt] [useFetch] the request URL must not start with \"//\".');\n  }\n  const {\n    server,\n    lazy,\n    default: defaultFn,\n    transform,\n    pick,\n    watch,\n    immediate,\n    getCachedData,\n    deep,\n    dedupe,\n    ...fetchOptions\n  } = opts;\n  const _fetchOptions = reactive({\n    ...fetchDefaults,\n    ...fetchOptions,\n    cache: typeof opts.cache === \"boolean\" ? void 0 : opts.cache\n  });\n  const _asyncDataOptions = {\n    server,\n    lazy,\n    default: defaultFn,\n    transform,\n    pick,\n    immediate,\n    getCachedData,\n    deep,\n    dedupe,\n    watch: watch === false ? [] : [_fetchOptions, _request, ...watch || []]\n  };\n  if (import.meta.dev && import.meta.client) {\n    _asyncDataOptions._functionName = opts._functionName || \"useFetch\";\n  }\n  let controller;\n  const asyncData = useAsyncData(key, () => {\n    controller?.abort?.();\n    controller = typeof AbortController !== \"undefined\" ? new AbortController() : {};\n    const timeoutLength = toValue(opts.timeout);\n    let timeoutId;\n    if (timeoutLength) {\n      timeoutId = setTimeout(() => controller.abort(), timeoutLength);\n      controller.signal.onabort = () => clearTimeout(timeoutId);\n    }\n    let _$fetch = opts.$fetch || globalThis.$fetch;\n    if (import.meta.server && !opts.$fetch) {\n      const isLocalFetch = typeof _request.value === \"string\" && _request.value[0] === \"/\" && (!toValue(opts.baseURL) || toValue(opts.baseURL)[0] === \"/\");\n      if (isLocalFetch) {\n        _$fetch = useRequestFetch();\n      }\n    }\n    return _$fetch(_request.value, { signal: controller.signal, ..._fetchOptions }).finally(() => {\n      clearTimeout(timeoutId);\n    });\n  }, _asyncDataOptions);\n  return asyncData;\n}\nexport function useLazyFetch(request, arg1, arg2) {\n  const [opts = {}, autoKey] = typeof arg1 === \"string\" ? [{}, arg1] : [arg1, arg2];\n  if (import.meta.dev && import.meta.client) {\n    opts._functionName ||= \"useLazyFetch\";\n  }\n  return useFetch(\n    request,\n    {\n      ...opts,\n      lazy: true\n    },\n    // @ts-expect-error we pass an extra argument with the resolved auto-key to prevent another from being injected\n    autoKey\n  );\n}\nfunction generateOptionSegments(opts) {\n  const segments = [\n    toValue(opts.method)?.toUpperCase() || \"GET\",\n    toValue(opts.baseURL)\n  ];\n  for (const _obj of [opts.params || opts.query]) {\n    const obj = toValue(_obj);\n    if (!obj) {\n      continue;\n    }\n    const unwrapped = {};\n    for (const [key, value] of Object.entries(obj)) {\n      unwrapped[toValue(key)] = toValue(value);\n    }\n    segments.push(unwrapped);\n  }\n  return segments;\n}\n","export default {\n    wrapper: \"flex p-4 justify-center\",\n    facebook: \"bg-white dark:bg-white rounded-xl border\",\n    linkedin: \"\",\n    twitter: \"bg-white dark:bg-white\",\n    // Default Tailwind CSS values\n    default: {\n    }\n  }","<template>\r\n  <div v-if=\"data?.tweet?.text\" @click=\"open\" target=\"_blank\" class=\"tweet\">\r\n    <!-- Header -->\r\n    <div class=\"tweet-header\">\r\n      <!-- Image -->\r\n      <div class=\"tweet-header-image\">\r\n        <img :src=\"data.tweet.user.profile_image_url_https\" />\r\n      </div>\r\n\r\n      <!-- Name -->\r\n      <div class=\"tweet-header-name\">\r\n        <p class=\"tweet-header-name-top\">\r\n          <span>{{ data.tweet.user.name }}</span>\r\n\r\n          <!-- Verified Logo -->\r\n          <svg\r\n            v-if=\"data.tweet.user.is_blue_verified\"\r\n            viewBox=\"0 0 22 22\"\r\n            aria-label=\"Verified account\"\r\n            role=\"img\"\r\n            class=\"tweet-header-name-top-badge\"\r\n          >\r\n            <g>\r\n              <path\r\n                d=\"M20.396 11c-.018-.646-.215-1.275-.57-1.816-.354-.54-.852-.972-1.438-1.246.223-.607.27-1.264.14-1.897-.131-.634-.437-1.218-.882-1.687-.47-.445-1.053-.75-1.687-.882-.633-.13-1.29-.083-1.897.14-.273-.587-.704-1.086-1.245-1.44S11.647 1.62 11 1.604c-.646.017-1.273.213-1.813.568s-.969.854-1.24 1.44c-.608-.223-1.267-.272-1.902-.14-.635.13-1.22.436-1.69.882-.445.47-.749 1.055-.878 1.688-.13.633-.08 1.29.144 1.896-.587.274-1.087.705-1.443 1.245-.356.54-.555 1.17-.574 1.817.02.647.218 1.276.574 1.817.356.54.856.972 1.443 1.245-.224.606-.274 1.263-.144 1.896.13.634.433 1.218.877 1.688.47.443 1.054.747 1.687.878.633.132 1.29.084 1.897-.136.274.586.705 1.084 1.246 1.439.54.354 1.17.551 1.816.569.647-.016 1.276-.213 1.817-.567s.972-.854 1.245-1.44c.604.239 1.266.296 1.903.164.636-.132 1.22-.447 1.68-.907.46-.46.776-1.044.908-1.681s.075-1.299-.165-1.903c.586-.274 1.084-.705 1.439-1.246.354-.54.551-1.17.569-1.816zM9.662 14.85l-3.429-3.428 1.293-1.302 2.072 2.072 4.4-4.794 1.347 1.246z\"\r\n              ></path>\r\n            </g>\r\n          </svg>\r\n        </p>\r\n\r\n        <!-- Screen Name-->\r\n        <p class=\"tweet-header-name-bottom\">\r\n          @{{ data.tweet.user.screen_name }}\r\n        </p>\r\n      </div>\r\n\r\n      <!-- Logo -->\r\n      <div class=\"tweet-header-logo\">\r\n        <!-- X -->\r\n        <svg viewBox=\"0 0 24 24\" aria-hidden=\"true\" class=\"tweet-header-logo-x\">\r\n          <g>\r\n            <path\r\n              d=\"M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z\"\r\n            ></path>\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Body -->\r\n    <div class=\"tweet-body\">\r\n      <p class=\"tweet-body-text\" v-if=\"data.sections\">\r\n        <span v-for=\"(item, index) in data.sections\" :key=\"index + 'section'\">\r\n          <!-- Plain Text -->\r\n          <span v-if=\"!item.entityIndice\">\r\n            {{ decodeHTMLEntities(item.text) }}\r\n          </span>\r\n\r\n          <!-- URL -->\r\n          <a\r\n            @click.stop\r\n            v-else-if=\"item.entityIndice?.urls\"\r\n            :href=\"item.entityIndice.urls.expanded_url\"\r\n          >\r\n            {{ item.entityIndice.urls.display_url }}\r\n          </a>\r\n\r\n          <!-- Hashtag -->\r\n          <a\r\n            @click.stop\r\n            v-else-if=\"item.entityIndice?.hashtags\"\r\n            :href=\"`https://twitter.com/hashtag/${item.entityIndice.hashtags.text}`\"\r\n            target=\"_blank\"\r\n          >\r\n            #{{ item.entityIndice.hashtags.text }}\r\n          </a>\r\n\r\n          <!-- User Mention -->\r\n          <a\r\n            @click.stop\r\n            v-else-if=\"item.entityIndice?.userMentions\"\r\n            :href=\"`https://twitter.com/${item.entityIndice.userMentions.screen_name}`\"\r\n            target=\"_blank\"\r\n          >\r\n            @{{ item.entityIndice.userMentions.screen_name }}\r\n          </a>\r\n\r\n          <!-- Media (image) -->\r\n          <img\r\n            v-else-if=\"props.showMedia && item.entityIndice?.media\"\r\n            loading=\"lazy\"\r\n            class=\"tweet-body-image\"\r\n            :src=\"item.entityIndice.media.expanded_url\"\r\n            :style=\"{\r\n              width: `${Number(\r\n                data.tweet.mediaDetails?.[0]?.sizes?.large?.w\r\n              )}px`,\r\n              'aspect-ratio':\r\n                Number(data.tweet.mediaDetails?.[0]?.sizes?.large?.w) /\r\n                Number(data.tweet.mediaDetails?.[0]?.sizes?.large?.h),\r\n            }\"\r\n          />\r\n        </span>\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { onMounted, useFetch } from \"#imports\";\r\nimport { Tweet, Section } from \"../../types\";\r\n\r\nconst props = defineProps({\r\n  id: { type: String, required: true },\r\n  showMedia: { type: Boolean, required: false, default: () => true },\r\n});\r\n\r\nfunction decodeHTMLEntities(text: string): string {\r\n  const entities: { [key: string]: string } = {\r\n    \"&amp;\": \"&\",\r\n    \"&lt;\": \"<\",\r\n    \"&gt;\": \">\",\r\n    \"&quot;\": '\"',\r\n    \"&#039;\": \"'\",\r\n  };\r\n\r\n  return text.replace(\r\n    /&(amp|lt|gt|quot|#039);/g,\r\n    (match: string) => entities[match]\r\n  );\r\n}\r\n\r\nfunction open() {\r\n  window.open(\r\n    `https://twitter.com/${data.value?.tweet.user.screen_name}/status/${props.id}`,\r\n    \"_blank\"\r\n  );\r\n}\r\n\r\ninterface Response {\r\n  sections: Section[];\r\n  tweet: Tweet;\r\n}\r\n\r\nconst { data } = await useFetch<Response>(`/api/tweets/${props.id}`);\r\n</script>\r\n\r\n<style scoped>\r\n.tweet {\r\n  border: 1px solid #cfd9de;\r\n  padding: 12px 16px;\r\n  border-radius: 12px;\r\n  display: block;\r\n  text-decoration: none;\r\n  max-width: 548px;\r\n  color: #000;\r\n}\r\n.tweet:hover {\r\n  background: #fafafa;\r\n  cursor: pointer;\r\n}\r\n\r\n/** Header */\r\n.tweet-header {\r\n  display: flex;\r\n  padding-bottom: 12px;\r\n}\r\n.tweet-header-image > img {\r\n  width: 46px;\r\n  height: 46px;\r\n  border-radius: 50%;\r\n}\r\n.tweet-header-name {\r\n  margin-left: 4px;\r\n  margin-right: 4px;\r\n}\r\n.tweet-header-name-top {\r\n  font-weight: 700;\r\n  font-size: 14px;\r\n  margin: 0;\r\n  display: flex;\r\n  gap: 2px;\r\n  align-items: center;\r\n}\r\n.tweet-header-name-top-badge {\r\n  fill: #1d9bf0;\r\n  width: 17.5px;\r\n  height: 17.5px;\r\n}\r\n.tweet-header-name-bottom {\r\n  font-size: 14px;\r\n  margin: 0;\r\n  color: #536471;\r\n}\r\n.tweet-header-logo {\r\n  margin-left: auto;\r\n}\r\n.tweet-header-logo-x {\r\n  height: 23px;\r\n  width: 23px;\r\n}\r\n\r\n/** Body */\r\n.tweet-body {\r\n}\r\n.tweet-body-text {\r\n  white-space: pre-line;\r\n  font-size: 19px;\r\n  line-height: 23px;\r\n  margin: 0;\r\n}\r\n.tweet-body-image {\r\n  max-width: 100%;\r\n  display: block;\r\n  border-radius: 10px;\r\n  border: 1px solid #cfd9de;\r\n  margin-top: 11px;\r\n  width: 100%;\r\n  height: auto;\r\n}\r\n.tweet-body:deep(a) {\r\n  color: #006fd6;\r\n  text-decoration: none;\r\n}\r\n.tweet-body:deep(a:hover) {\r\n  text-decoration: underline;\r\n}\r\n</style>\r\n","<template>\n    <div :class=\"ui.wrapper\">\n        <div v-if=\"isFacebook\">\n            <iframe\n                :class=\"ui.facebook\"\n                :src=\"src\"\n                :width=\"width\"\n                :height=\"410\"\n                style=\"overflow: hidden\"\n                scrolling=\"no\"\n                frameborder=\"0\"\n                allowfullscreen=\"true\"\n                allow=\"autoplay; clipboard-write; encrypted-media; picture-in-picture; web-share\"\n            ></iframe>\n        </div>\n        <div v-else-if=\"isLinkedin\">\n            <iframe\n                :class=\"ui.linkedin\"\n                :src=\"src\"\n                :width=\"width\"\n                :height=\"650\"\n                frameborder=\"0\"\n                allowfullscreen=\"true\"\n                title=\"Embedded post\"\n            ></iframe>\n        </div>\n        <div v-else-if=\"isTwitter\">\n            <NuxtTweet\n                :class=\"ui.twitter\"\n                :id=\"src\"\n                :showMedia=\"true\"\n            />\n        </div>\n        <div v-else>No supported social media found.</div>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { defineProps, toRef, computed } from 'vue'\nimport { social as config } from '@/ui.config' // Import the config file\n\n// Define props\nconst props = withDefaults(\n    defineProps<{\n        description?: string;\n        src?: string;\n        width?: string;\n        height?: string;\n        ui?: Partial<typeof config>;\n    }>(),\n    {\n        ui: () => ({}),\n        description: \"\",\n        src: \"\",\n        width: \"500\",\n        height: \"\",\n    }\n);\n\nconst { ui } = useUI(\n    \"sh-social\",\n    toRef(props, \"ui\"),\n    config\n);\n\n// Computed properties to determine social media type\nconst isFacebook = computed(() => /facebook/i.test(props.src));\nconst isLinkedin = computed(() => /linkedin/i.test(props.src));\nconst isTwitter = computed(() => /^\\d+$/.test(props.src));\n</script>\n"],"names":["_withAsyncContext"],"mappings":"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","x_google_ignoreList":[0,2]}