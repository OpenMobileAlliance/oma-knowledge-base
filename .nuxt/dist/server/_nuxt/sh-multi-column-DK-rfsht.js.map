{"version":3,"file":"sh-multi-column-DK-rfsht.js","sources":["../../../../ui.config/sh-multi-column.ts","../../../../components/content/sh-multi-column.vue"],"sourcesContent":["export default {\n  wrapper: \"bg-gray-50 dark:bg-inherit border-2 border-neutral-200 dark:border-neutral-500 rounded-2xl shadow-2xl p-5\",\n  default: {\n    size: 3,\n    gap: \"gap-4\"\n  }\n}","<template>\n  <div :class=\"ui.wrapper\">\n    <div :class=\"gridClass\">\n      <MDCSlot name=\"default\" unwrap=\"\" />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {multiColumn as config, gridSizes } from \"@/ui.config\"\n  \nconst props = withDefaults(\n  defineProps<{\n    ui?: Partial<typeof config>;\n    description?: string;\n    cols: Number;\n    gap?: String;\n    class?: any;\n  }>(),\n  {\n    ui: () => ({}),\n    cols: () => config.default.cols,\n    gap: () => config.default.gap,\n    class: () => undefined,\n    description: \"\",\n  });\n\nconst { ui, attrs } = useUI(\n  \"sh-multi-column\",\n  toRef(props, \"ui\"),\n  config,\n  toRef(props, \"class\")\n)\n\nconst gridClass = computed(() => {\n  const cols = props.cols != undefined ? props.cols : config.default.cols\n\n  return [\"grid\", gridSizes.gridCols[cols], gridSizes.gridRows[1], props.gap].join(' ')\n})\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAe,SAAA;AAAA,EACb,SAAS;AAAA,EACT,SAAS;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,EACP;AACF;;;;;;;;;;;;ACKA,UAAM,QAAQ;AAgBR,UAAA,EAAE,IAAI,MAAA,IAAU;AAAA,MACpB;AAAA,MACA,MAAM,OAAO,IAAI;AAAA,MACjB;AAAA,MACA,MAAM,OAAO,OAAO;AAAA,IAAA;AAGhB,UAAA,YAAY,SAAS,MAAM;AAC/B,YAAM,OAAO,MAAM,QAAQ,SAAY,MAAM,OAAO,OAAO,QAAQ;AAEnE,aAAO,CAAC,QAAQ,UAAU,SAAS,IAAI,GAAG,UAAU,SAAS,CAAC,GAAG,MAAM,GAAG,EAAE,KAAK,GAAG;AAAA,IAAA,CACrF;;;;;;;;;;;;;;;;"}